name: Test
on:
  pull_request:
  push:
    branches:
      - main
      - "releases/*"

jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
        with:
          node-version: 20
          cache: npm
      - run: npm ci

      - run: npm run lint
      - run: npm run build

      - run: git diff -aw --exit-code dist/index.js

  test-single:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest, macos-13]
        ndk-version: [r29, r26d]
      fail-fast: false

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
      - name: Install NDK Clang ${{ matrix.ndk-version }}
        uses: ./
        id: install-clang
        with:
          ndk-version: ${{ matrix.ndk-version }}

      - run: clang --version
      - if: runner.os != 'Windows'
        run: ${{ steps.install-clang.outputs.clang-path }}/bin/clang --version
      - if: runner.os == 'Windows'
        run: ${{ steps.install-clang.outputs.clang-path }}\bin\clang.exe --version

  test-multiple:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Install NDK Clang r29
        uses: ./
        id: install-clang-r29
        with:
          ndk-version: r29
          add-to-path: false
      - name: Install NDK Clang r26d
        uses: ./
        id: install-clang-r26d
        with:
          ndk-version: r26d
          add-to-path: false

      - run: "! which clang || clang --version"
      - run: ${{ steps.install-clang-r29.outputs.clang-path }}/bin/clang --version
      - run: ${{ steps.install-clang-r26d.outputs.clang-path }}/bin/clang --version
